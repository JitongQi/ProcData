% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{seq2feature_seq2seq}
\alias{seq2feature_seq2seq}
\title{Feature Extraction by action sequence autoencoder}
\usage{
seq2feature_seq2seq(seqs, K, rnn_type = "lstm", n_epoch = 50,
  method = "last", step_size = 1e-04, optimizer_name = "adam",
  samples_train, samples_valid, samples_test = NULL, pca = TRUE,
  gpu = FALSE, verbose = TRUE, return_theta = TRUE)
}
\arguments{
\item{seqs}{a list of \code{n} action sequences. Each element is an action sequence in the form of a vector of actions.}

\item{K}{the number of features to be extracted.}

\item{rnn_type}{the type of recurrent neural network to be used for modeling action sequences. \code{"lstm"} for long-short term memory. \code{"gru"} for gated recurrent unit.}

\item{n_epoch}{the number of epochs to be run when minimizing the loss function}

\item{method}{the method to be used to compute features from the output of an RNN; With \code{method="last"}, the features are the last output of the encoder RNN; with \code{method="avg"}, the features are the average of the outputs of the encoder RNN. keep the output of the last step; "average": average of the outputs of all time steps}

\item{step_size}{(baseline) learning rate of optimizer}

\item{optimizer_name}{a character string specifying the optimizer to be used for training: sgd, rmsprop, adadelta, adam}

\item{samples_train}{specify the train set;}

\item{samples_valid}{specify the validation set;}

\item{samples_test}{specify the test set;}

\item{pca}{logical. If TRUE, the principal components of features are returned.}

\item{gpu}{logical. If TRUE, use gpu (if available) for training}

\item{verbose}{logical. If TRUE, training progress is printed.}

\item{return_theta}{logical. If TRUE, extracted features are returned.}
}
\value{
a list
  \item{features}{an \code{n} by \code{K} matrix which gives \code{K} raw features or principal features for \code{n} sequences.}
  \item{train_loss}{a vector of length \code{n_epoch}; training loss trace}
  \item{valid_loss}{a vector of length \code{n_epoch}; validation loss trace}
  \item{test_loss}{a vector of length \code{n_epoch}; test loss trace}
}
\description{
\code{seq2feature_seq2seq} extract features from action sequences by action sequence autoencoder
}
\examples{
n <- 50
seqs <- seq_gen(n)
seq2seq_res <- seq2feature_seq2seq(seqs, 5, rnn_type="lstm", n_epoch=5, samples_train=1:40, samples_valid=41:50)
features <- seq2seq_res$theta
plot(seq2seq_res$train_loss, col="blue", type="l")
lines(seq2seq_res$valid_loss, col="red")
}
