// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// MDS
List MDS(NumericMatrix D, NumericMatrix Theta, int n_epoch, double step_size, double tot, unsigned int seed);
RcppExport SEXP _ProcData_MDS(SEXP DSEXP, SEXP ThetaSEXP, SEXP n_epochSEXP, SEXP step_sizeSEXP, SEXP totSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< int >::type n_epoch(n_epochSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tot(totSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(MDS(D, Theta, n_epoch, step_size, tot, seed));
    return rcpp_result_gen;
END_RCPP
}
// MDS_subset
List MDS_subset(NumericMatrix D, NumericMatrix Theta, int n_epoch, double step_size, double tot, IntegerMatrix train_set, IntegerMatrix valid_set);
RcppExport SEXP _ProcData_MDS_subset(SEXP DSEXP, SEXP ThetaSEXP, SEXP n_epochSEXP, SEXP step_sizeSEXP, SEXP totSEXP, SEXP train_setSEXP, SEXP valid_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< int >::type n_epoch(n_epochSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tot(totSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type train_set(train_setSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type valid_set(valid_setSEXP);
    rcpp_result_gen = Rcpp::wrap(MDS_subset(D, Theta, n_epoch, step_size, tot, train_set, valid_set));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProcData_MDS", (DL_FUNC) &_ProcData_MDS, 6},
    {"_ProcData_MDS_subset", (DL_FUNC) &_ProcData_MDS_subset, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProcData(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
